name: Release Cli

on:
  push:
    tags:         # Trigger only on tags
      - 'v*'      # Ensure this matches your versioning scheme (e.g., v0.0.7)
    branches:
      - main
    paths:
      - "cli/**"

jobs:
  go-release:
    name: Go Release Job
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # Fetch all tags
      - name: Fetch tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      # Set previous tag
      - name: Set previous tag
        id: previous-tag
        run: echo "previous-tag=$(git describe --tags --abbrev=0 HEAD^)" >> $GITHUB_OUTPUT

      # Calculate and set new tag
      - name: Calculate new tag
        id: new-tag
        run: |
          previous_tag=${{ steps.previous-tag.outputs['previous-tag'] }}
          version=$(echo $previous_tag | sed 's/^v//')
          major=$(echo $version | cut -d. -f1)
          minor=$(echo $version | cut -d. -f2)
          patch=$(echo $version | cut -d. -f3)
          new_patch=$((patch + 1))
          new_tag="v$major.$minor.$new_patch"
          echo "tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Set Up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21.x

      - name: Run Go Releaser
        uses: goreleaser/goreleaser-action@v5
        with:
          workdir: cli
          distribution: goreleaser
          version: latest
          args: release --clean -p 1 --skip=validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     GORELEASER_CURRENT_TAG: ${{ github.ref_name }}  # Use the current tag from the event context
      #     GORELEASER_PREVIOUS_TAG: ${{ steps.previous_tag.outputs.previous-tag }}

